query AlienQuery($name: String!, $struct: FindDogInput, $dogCommand: DogCommand! = DOWN, $case: Escaping = {type: "foo"}) {
  outputOnly
  escaping(x: $case)
  dog {
    ... DogFragment
    ... on Dog {
      name
      barkVolume
    }
    owner {
      name
      type: name
      abstract: name
      def: name
      option: name
      trait: name
      ... HumanFrag
    }
  }
  findDog(searchBy: { name: "Barky" }) {
    ... DogFragment
    ... PetFrag
  }
  findDog2: findDog(searchBy: $struct) {
    ... DogFragment
    doesKnowCommand(dogCommand: $dogCommand)
  }
  findDog3: findDog(searchBy: { name: $name }) {
    ... DogFragment
    ... PetFrag
  }
}

fragment DogFragment on Dog {
  name,
  barkVolume
}

fragment PetFrag on Pet {
  name
  ... on Cat {
    nickname
  }
  ... on Dog {
    doesKnowCommand(dogCommand: DOWN)
  }
  ... CatFrag
}

fragment CatFrag on Cat {
 meowVolume
}

fragment HumanFrag on Human {
 name
 pets {
  name
 }
}
