"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[931],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Context"},i=void 0,c={unversionedId:"server/schema/context",id:"server/schema/context",title:"Context",description:"Many GraphQL implementations provide some method to pass query-wide parameters around in the graph.",source:"@site/docs/server/schema/context.md",sourceDirName:"server/schema",slug:"/server/schema/context",permalink:"/gql/docs/server/schema/context",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/server/schema/context.md",tags:[],version:"current",frontMatter:{title:"Context"},sidebar:"docs",previous:{title:"The schema",permalink:"/gql/docs/server/schema/"},next:{title:"Error handling",permalink:"/gql/docs/server/schema/error_handling"}},s={},l=[{value:"MTL",id:"mtl",level:2},{value:"Working in a specific effect",id:"working-in-a-specific-effect",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Many GraphQL implementations provide some method to pass query-wide parameters around in the graph.\ngql has no such concept, it is rather a by-product of being written in tagless style."),(0,o.kt)("h2",{id:"mtl"},"MTL"),(0,o.kt)("p",null,"We can emulate context by using a ",(0,o.kt)("inlineCode",{parentName:"p"},"ReaderT"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"Kleisli")," monad transformer from ",(0,o.kt)("inlineCode",{parentName:"p"},"cats"),".\nWriting ",(0,o.kt)("inlineCode",{parentName:"p"},"ReaderT"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"Kleisli")," everywhere is tedious, instead consider opting for ",(0,o.kt)("inlineCode",{parentName:"p"},"cats.mtl.Ask"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import gql._\nimport gql.dsl._\nimport gql.ast._\nimport cats.mtl.Ask\nimport cats._\nimport cats.data._\nimport cats.implicits._\nimport io.circe._\nimport cats.effect._\nimport cats.effect.unsafe.implicits.global\nimport io.circe.syntax._\n\nfinal case class Context(\n  userId: String\n)\n\ndef queries[F[_]: Functor](implicit A: Ask[F, Context]): Type[F, Unit] = \n  tpe[F, Unit](\n    "Query",\n    "me" -> eff(_ => A.ask.map(_.userId))\n  )\n\ntype G[A] = Kleisli[IO, Context, A]\n\ndef query = """\n  query {\n    me\n  }\n"""\n\nStatistics[IO].flatMap{ stats =>\n  val schema =\n    Schema.query(stats.mapK(Kleisli.liftK[IO, Context]))(queries[G])\n    \n  Compiler[G].compile(schema, query) match {\n    case Right(Application.Query(fa)) => \n      fa\n        .run(Context("john_doe"))\n        .map(_.asJson)\n  }\n}.unsafeRunSync()\n// res0: Json = JObject(\n//   value = object[data -> {\n//   "me" : "john_doe"\n// }]\n// )\n')),(0,o.kt)("h2",{id:"working-in-a-specific-effect"},"Working in a specific effect"),(0,o.kt)("p",null,"If you are working in a specific effect, you most likely have more tools to work with.\nFor instance, if you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"IO"),", you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"IOLocal")," to wire context through your application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'\ntrait Authorized {\n  def getAuth: IO[Ior[String, Context]]\n}\n\nobject Authorized {\n  def fromIOLocal(iol: IOLocal[Option[Context]]) = new Authorized {\n    def getAuth = iol.get.map{\n      case None => Ior.Left("You must authorize to perform this action")\n      case Some(c) => Ior.Right(c)\n    }\n  }\n}\n\ndef makeSchema(implicit auth: Authorized): Schema[IO, Unit, Unit, Unit] = ???\n\nIOLocal[Option[Context]](None).flatMap{ implicit loc =>\n  implicit val auth = Authorized.fromIOLocal(loc)\n  \n  def s = makeSchema\n  \n  def runQueryWithSchema: IO[Unit] = ???\n  \n  def runAuthorizedQuery(userId: String): IO[Unit] =\n    loc.set(Some(Context(userId))) >> runQueryWithSchema\n    \n  runAuthorizedQuery("john_doe")\n}\n')))}u.isMDXComponent=!0}}]);