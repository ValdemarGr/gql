"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[633],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>d});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?t.createElement(f,l(l({ref:n},u),{},{components:r})):t.createElement(f,l({ref:n},u))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5001:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const i={title:"Error handling"},l=void 0,o={unversionedId:"server/schema/error_handling",id:"server/schema/error_handling",title:"Error handling",description:"There are different types of errors in gql.",source:"@site/docs/server/schema/error_handling.md",sourceDirName:"server/schema",slug:"/server/schema/error_handling",permalink:"/gql/docs/server/schema/error_handling",draft:!1,editUrl:"https://github.com/valdemargr/gql/tree/main/docs/server/schema/error_handling.md",tags:[],version:"current",frontMatter:{title:"Error handling"},sidebar:"docs",previous:{title:"Context",permalink:"/gql/docs/server/schema/context"},next:{title:"Compiler",permalink:"/gql/docs/server/schema/compiler"}},s={},c=[{value:"Execution",id:"execution",level:2},{value:"Examples",id:"examples",level:2},{value:"Exception trick",id:"exception-trick",level:3}],u={toc:c};function p(e){let{components:n,...i}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are different types of errors in gql."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Schema validation errors, which should be caught in development.\nThese are for instance caused by duplicate field names or invalid typenames."),(0,a.kt)("li",{parentName:"ul"},"Query preparation errors, which are errors caused by invalid queries."),(0,a.kt)("li",{parentName:"ul"},"Execuion errors. These are errors that occur during query evaluation, caused by resolvers that fail.")),(0,a.kt)("h2",{id:"execution"},"Execution"),(0,a.kt)("p",null,"Error handling in gql can be performed in two ways, it can be returned explicitly or raised in ",(0,a.kt)("inlineCode",{parentName:"p"},"F"),"."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Let's setup the scene:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import gql.ast._\nimport gql.dsl.all._\nimport gql.dsl.all.value._\nimport gql._\nimport cats.implicits._\nimport cats.data._\nimport cats.effect._\nimport cats.effect.unsafe.implicits.global\nimport io.circe.syntax._\n  \ndef multifailSchema = \n  tpe[IO, Unit](\n    "Query", \n    "field" -> build.from(arged(arg[Int]("i", scalar(10))).evalMap{ \n      case 0 => IO.pure(Ior.left("fail gracefully"))\n      case 1 => IO.raiseError(new Exception("fail hard"))\n      case i => IO.pure(Ior.right(i))\n    }.rethrow)\n  )\n\ndef go(query: String, tpe: Type[IO, Unit] = multifailSchema) = \n  Schema.query(tpe).flatMap { sch =>\n    Compiler[IO].compile(sch, query) match {\n      case Left(err) => \n        println(err)\n        IO.pure(err.asJson)\n      case Right(Application.Query(fa)) => \n        fa.map{x => println(x.errors);x.asJson }\n    }\n  }.unsafeRunSync()\n  \ngo("query { field }")\n// Chain()\n// res0: io.circe.Json = JObject(\n//   value = object[data -> {\n//   "field" : 10\n// }]\n// )\n')),(0,a.kt)("p",null,"A query can fail gracefully by returning ",(0,a.kt)("inlineCode",{parentName:"p"},"Ior.left"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'go("query { field(i: 0) }")\n// Chain(Error(Right(fail gracefully),Chain("field")))\n// res1: io.circe.Json = JObject(\n//   value = object[data -> {\n//   "field" : null\n// },errors -> [\n//   {\n//     "message" : "fail gracefully",\n//     "path" : [\n//       "field"\n//     ]\n//   }\n// ]]\n// )\n')),(0,a.kt)("p",null,"A query can fail hard by raising an exception:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'go("query { field(i: 1) }")\n// Chain(Error(Left(java.lang.Exception: fail hard),Chain("field")))\n// res2: io.circe.Json = JObject(\n//   value = object[data -> {\n//   "field" : null\n// },errors -> [\n//   {\n//     "message" : "internal error",\n//     "path" : [\n//       "field"\n//     ]\n//   }\n// ]]\n// )\n')),(0,a.kt)("p",null,"A query can also fail before even evaluating the query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'go("query { nonExisting }")\n// Preparation(Chain(PositionalError(Cursor(Chain()),List(Caret(0,8,8)),Field \'nonExisting\' is not a member of `Query`.)))\n// res3: io.circe.Json = JObject(\n//   value = object[errors -> [\n//   {\n//     "message" : "Field \'nonExisting\' is not a member of `Query`.",\n//     "locations" : [\n//       {\n//         "line" : 0,\n//         "column" : 8\n//       }\n//     ]\n//   }\n// ]]\n// )\n')),(0,a.kt)("p",null,"And finally, it can fail if it isn't parsable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'def largerQuery = """\n  query {\n    field1\n    field2(test: 42)\n  }\n  \n  fragment test on Test {\n    -value1\n    value2 \n  }\n"""\n\ngo(largerQuery)\n// Parse(ParseError(Caret(8,4,80),cats.Always@6535a4f4))\n// res4: io.circe.Json = JObject(\n//   value = object[errors -> [\n//   {\n//     "message" : "could not parse query",\n//     "locations" : [\n//       {\n//         "line" : 8,\n//         "column" : 4\n//       }\n//     ],\n//     "error" : "\\u001b[34mfailed at offset 80 on line 7 with code 45\\none of \\"...\\"\\nin char in range A to Z (code 65 to 90)\\nin char in range _ to _ (code 95 to 95)\\nin char in range a to z (code 97 to 122)\\nfor document:\\n\\u001b[0m\\u001b[32m| \\u001b[0m\\u001b[32m\\n|   query {\\n|     field1\\n|     field2(test: 42)\\n|   }\\n|   \\n|   fragment test on Test {\\n|     \\u001b[41m\\u001b[30m-\\u001b[0m\\u001b[32mvalue1\\n| \\u001b[31m>^^^^^^^ line:7, column:4, offset:80, character code code:45\\u001b[0m\\u001b[32m\\n|     value2 \\n|   }\\n| \\u001b[0m\\u001b[0m"\n//   }\n// ]]\n// )\n')),(0,a.kt)("p",null,"Parser errors also look nice in ANSI terminals:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Terminal output",src:r(4543).Z,width:"350",height:"329"})),(0,a.kt)("h3",{id:"exception-trick"},"Exception trick"),(0,a.kt)("p",null,"If for whatever reason you wish to pass information through exceptions, that is also possible:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'final case class MyException(msg: String, data: Int) extends Exception(msg)\n\nval res = \n  Schema.query(\n    tpe[IO, Unit](\n      "Query",\n      "field" -> eff(_ => IO.raiseError[String](MyException("fail hard", 42)))\n    )\n  ).flatMap { sch =>\n    Compiler[IO].compile(sch, "query { field } ") match {\n      case Right(Application.Query(run)) => run\n    }\n  }.unsafeRunSync()\n// res: QueryResult = QueryResult(\n//   data = object[field -> null],\n//   errors = Singleton(\n//     a = Error(\n//       error = Left(value = MyException(msg = "fail hard", data = 42)),\n//       path = Singleton(a = JString(value = "field"))\n//     )\n//   )\n// )\n  \nres.errors.headOption.flatMap(_.error.left.toOption) match {\n  case Some(MyException(_, data)) => println(s"Got data: $data")\n  case _ => println("No data")\n}\n// Got data: 42\n')))}p.isMDXComponent=!0},4543:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/error_image-7805f49e8b21d536040a6e281835df41.png"}}]);