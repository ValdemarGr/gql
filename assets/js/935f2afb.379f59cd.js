"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"collapsed":false,"type":"category","label":"Overview","items":[{"type":"link","label":"Modules","href":"/gql/docs/overview/modules","docId":"overview/modules"}],"collapsible":true,"href":"/gql/docs/overview"},{"type":"link","label":"Tutorial","href":"/gql/docs/tutorial","docId":"tutorial"},{"collapsed":false,"type":"category","label":"Server","items":[{"collapsed":false,"type":"category","label":"Schema","items":[{"type":"link","label":"Output types","href":"/gql/docs/server/schema/output_types","docId":"server/schema/output_types"},{"type":"link","label":"Input types","href":"/gql/docs/server/schema/input_types","docId":"server/schema/input_types"},{"type":"link","label":"The DSL","href":"/gql/docs/server/schema/dsl","docId":"server/schema/dsl"},{"type":"link","label":"Monadic Resolver DSL","href":"/gql/docs/server/schema/arrow_dsl","docId":"server/schema/arrow_dsl"},{"type":"link","label":"Resolvers","href":"/gql/docs/server/schema/resolvers","docId":"server/schema/resolvers"},{"type":"link","label":"The schema","href":"/gql/docs/server/schema/","docId":"server/schema/schema"},{"type":"link","label":"Context","href":"/gql/docs/server/schema/context","docId":"server/schema/context"},{"type":"link","label":"Error handling","href":"/gql/docs/server/schema/error_handling","docId":"server/schema/error_handling"},{"type":"link","label":"Compiler","href":"/gql/docs/server/schema/compiler","docId":"server/schema/compiler"},{"type":"link","label":"Extending schemas","href":"/gql/docs/server/schema/extending","docId":"server/schema/extending"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Execution","items":[{"type":"link","label":"Planning","href":"/gql/docs/server/execution/planning","docId":"server/execution/planning"},{"type":"link","label":"Statistics","href":"/gql/docs/server/execution/statistics","docId":"server/execution/statistics"}],"collapsible":true},{"collapsed":false,"type":"category","label":"Integrations","items":[{"type":"link","label":"Http4s","href":"/gql/docs/server/integrations/http4s","docId":"server/integrations/http4s"},{"type":"link","label":"GraphQL-WS","href":"/gql/docs/server/integrations/graphqlws","docId":"server/integrations/graphqlws"},{"type":"link","label":"Natchez (tracing)","href":"/gql/docs/server/integrations/natchez","docId":"server/integrations/natchez"},{"type":"link","label":"Global object identification","href":"/gql/docs/server/integrations/goi","docId":"server/integrations/goi"},{"type":"link","label":"Relational","href":"/gql/docs/server/integrations/relational","docId":"server/integrations/relational"}],"collapsible":true}],"collapsible":true},{"collapsed":false,"type":"category","label":"Client","items":[{"type":"link","label":"Query DSL","href":"/gql/docs/client/dsl","docId":"client/dsl"},{"type":"link","label":"Code generation","href":"/gql/docs/client/code-generation","docId":"client/code-generation"},{"collapsed":false,"type":"category","label":"Integrations","items":[{"type":"link","label":"Http4s","href":"/gql/docs/client/integrations/http4s","docId":"client/integrations/http4s"}],"collapsible":true}],"collapsible":true}]},"docs":{"client/code-generation":{"id":"client/code-generation","title":"Code generation","description":"Writing queries in scala using the dsl is more concise and type-safe than writing out the types and codecs by hand, but still requires a lot of code for non-trivial queries.","sidebar":"docs"},"client/dsl":{"id":"client/dsl","title":"Query DSL","description":"gql provides a dsl for building graphql queries and response parsers.","sidebar":"docs"},"client/integrations/http4s":{"id":"client/integrations/http4s","title":"Http4s","description":"","sidebar":"docs"},"overview":{"id":"overview","title":"Overview of gql","description":"Overview","sidebar":"docs"},"overview/modules":{"id":"overview/modules","title":"Modules","description":"Gql is published as multiple modules, so you can include what you need.","sidebar":"docs"},"server/execution/planning":{"id":"server/execution/planning","title":"Planning","description":"Planner algorithm","sidebar":"docs"},"server/execution/statistics":{"id":"server/execution/statistics","title":"Statistics","description":"An instance of Statistics captures the runtime statistics of resolvers.","sidebar":"docs"},"server/integrations/goi":{"id":"server/integrations/goi","title":"Global object identification","description":"gql also supports global object identification.","sidebar":"docs"},"server/integrations/graphqlws":{"id":"server/integrations/graphqlws","title":"GraphQL-WS","description":"gql contains a spec-compliant GraphQL over WebSocket protocol implementation.","sidebar":"docs"},"server/integrations/http4s":{"id":"server/integrations/http4s","title":"Http4s","description":"The http4s integration consists of two routes, one for synchronous requests and one for websocket requests.","sidebar":"docs"},"server/integrations/natchez":{"id":"server/integrations/natchez","title":"Natchez (tracing)","description":"The natchez package provides functions to trace your query execution and planning.","sidebar":"docs"},"server/integrations/relational":{"id":"server/integrations/relational","title":"Relational","description":"This integration is fairly new and sofisticated so it can be subject to change.","sidebar":"docs"},"server/schema/arrow_dsl":{"id":"server/schema/arrow_dsl","title":"Monadic Resolver DSL","description":"Modelling complex evaluation with Resolvers can be tricky.","sidebar":"docs"},"server/schema/compiler":{"id":"server/schema/compiler","title":"Compiler","description":"The Compiler is a utility for combining multiple parts of gql into a single executable.","sidebar":"docs"},"server/schema/context":{"id":"server/schema/context","title":"Context","description":"Many GraphQL implementations provide some method to pass query-wide parameters around in the graph.","sidebar":"docs"},"server/schema/dsl":{"id":"server/schema/dsl","title":"The DSL","description":"gql\'s dsl is a lightweight set of smart-constructors.","sidebar":"docs"},"server/schema/error_handling":{"id":"server/schema/error_handling","title":"Error handling","description":"There are different types of errors in gql.","sidebar":"docs"},"server/schema/extending":{"id":"server/schema/extending","title":"Extending schemas","description":"The AST in gql is subject to extension.","sidebar":"docs"},"server/schema/input_types":{"id":"server/schema/input_types","title":"Input types","description":"An input type In[A] defines an input type that produces an A or an error.","sidebar":"docs"},"server/schema/output_types":{"id":"server/schema/output_types","title":"Output types","description":"An output type Out[F[_], A] is an ast node that can take some A as input and produce a graphql value in the effect F.","sidebar":"docs"},"server/schema/resolvers":{"id":"server/schema/resolvers","title":"Resolvers","description":"Resolvers are at the core of gql; a resolver Resolver[F, I, O] takes an I and produces an O in effect F.","sidebar":"docs"},"server/schema/schema":{"id":"server/schema/schema","title":"The schema","description":"SchemaShape","sidebar":"docs"},"tutorial":{"id":"tutorial","title":"Tutorial","description":"For this showcase, Star Wars will be our domain of choice.","sidebar":"docs"}}}')}}]);