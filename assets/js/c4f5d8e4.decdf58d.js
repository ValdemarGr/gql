"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[195],{3261:(e,t,a)=>{a.r(t),a.d(t,{default:()=>f});var n=a(7294),l=a(6010),r=a(9960),s=a(2263),i=a(215),c=a(7462);const o="features_t9lD",m="featureSvg_GfXr";var u=a(814);const d=[{title:"Powerful algebraic resolvers",description:n.createElement(n.Fragment,null,"gql distills what it means to be a GraphQL resolver into a very concise and elegant algebra that composes."),code:n.createElement(u.Z,{language:"scala"},'"friends" -> resolve(_\n  .evalMap(getFriends)\n  .stream(is => peopleEvents(is.map(_.id)))\n  .rethrow\n  .arg(limitArg) andThen batchGetPeople\n)')},{title:"Declarative schema definition",description:n.createElement(n.Fragment,null,"Comes with syntax and a DSL for succinctly defining schemas."),code:n.createElement(u.Z,{language:"scala"},'tpe[IO, Person](\n  "Person",\n  "name" -> lift(_.name),\n  "friends" -> eff(p => getFriends(p.id))\n)')},{title:"No magic",description:n.createElement(n.Fragment,null,"gql adopts a simple and predictable approach to GraphQL. No macros or code generation, just plain functional Scala."),code:n.createElement(u.Z,{language:"scala"},'(\n  arg[String]("firstName"),\n  arg[String]("lastName")\n).mapN(_ + " " + _)')},{title:"Query planning",description:n.createElement(n.Fragment,null,"gql features a unique query planner that enables not just near optimal query performance, but also an extremely expressive batching api that helps the user optimize their schema in a complely typed functional manner. Is your problem monadic? Is it applicative? Is it a stream? gql can express any combination."),code:n.createElement(u.Z,{language:"scala"},"slowFields ::: fastFields.contramap(...)")},{title:"Signal based subscriptions",description:n.createElement(n.Fragment,null,"gql features an unusual subscription model that is instead based on signals. That is, streams or even resources of data can appear ",n.createElement("b",null,"anywhere")," in the schema and gql will efficiently re-execute the query and handle resource leasing."),code:n.createElement(u.Z,{language:"scala"},'"data" -> resolve(_\n  .stream(subscribeToIds)\n  .andThen(batchGetData)\n  .stream(subscribeToSubIds)\n)')},{title:"Easy to extend",description:n.createElement(n.Fragment,null,"gql is designed to be easily extended with new features. Want to provide a custom query planner or calculate cost estimates yourself? No problem.",n.createElement("br",null),n.createElement("br",null),"gql also comes with some pre-built extensions such as http4s integration, graphql-ws, tracing and global object identification."),code:n.createElement(u.Z,{language:"scala"},"gql.http4s.Http4sRoutes.ws(queryCompiler, _)")}];function p(e){let{Svg:t,title:a,description:r,code:s}=e;const i=void 0===t?n.createElement(n.Fragment,null):n.createElement(t,{className:m,role:"img"});return n.createElement("div",{className:(0,l.Z)("col col--4")},n.createElement("div",{className:"text--center"},i),n.createElement("div",{className:"text--center padding-horiz--md"},n.createElement("h3",null,a)),s,n.createElement("div",{className:"text--center padding-horiz--md"},n.createElement("p",null,r)))}function g(){return n.createElement("section",{className:o},n.createElement("div",{className:"container"},n.createElement("div",{className:"row"},d.map(((e,t)=>n.createElement(p,(0,c.Z)({key:t},e)))))))}const h="heroBanner_qdFl",E="buttons_AeoN";function b(){const{siteConfig:e}=(0,s.Z)();return n.createElement("header",{className:(0,l.Z)("hero hero--primary",h)},n.createElement("div",{className:"container"},n.createElement("h1",{className:"hero__title"},e.title),n.createElement("p",{className:"hero__subtitle"},e.tagline),n.createElement("div",{className:E},n.createElement(r.Z,{className:"button button--secondary button--lg",to:"/docs/overview/example"},"Example"))))}function f(){const{siteConfig:e}=(0,s.Z)();return n.createElement(i.Z,{description:"Scala GraphQL DSL"},n.createElement(b,null),n.createElement("main",null,n.createElement(g,null)))}}}]);