"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),h=o,d=m["".concat(p,".").concat(h)]||m[h]||c[h]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4840:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={title:"Http4s"},a=void 0,s={unversionedId:"integrations/http4s",id:"integrations/http4s",title:"Http4s",description:"The http4s integration consists of two routes, one for synchronous requests and one for websocket requests.",source:"@site/docs/integrations/http4s.md",sourceDirName:"integrations",slug:"/integrations/http4s",permalink:"/gql/docs/integrations/http4s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/integrations/http4s.md",tags:[],version:"current",frontMatter:{title:"Http4s"},sidebar:"docs",previous:{title:"Statistics",permalink:"/gql/docs/execution/statistics"},next:{title:"GraphQL-WS",permalink:"/gql/docs/integrations/graphqlws"}},p={},l=[{value:"Implementing authorization",id:"implementing-authorization",level:2},{value:"Websocket support",id:"websocket-support",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The http4s integration consists of two routes, one for synchronous requests and one for websocket requests."),(0,o.kt)("p",null,"The two routes have different signatures since ordinary Request/Response queries use headers to pass most information, but grahpql websocket protocols pass it in a payload."),(0,o.kt)("p",null,"For the construction of a synchronous Request/Response route an extension to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Compiler")," structure named ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler")," is required.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler")," interface is a superset of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Compiler")," interface in that it provides headers, and allows returning http responses."),(0,o.kt)("p",null,"The default implementation for a ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler")," simply decodes"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"this is not up to date")),(0,o.kt)("p",null,"We can convert a ",(0,o.kt)("inlineCode",{parentName:"p"},"Compiler")," to a ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler")," by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler.fromCompiler")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.effect._\nimport cats.data._\nimport gql._\nimport gql.http4s._\n\ndef myCompiler: Compiler[IO] = ???\n\ndef http4sCompiler: Http4sCompiler[IO] = Http4sCompiler.fromCompiler(myCompiler)\n")),(0,o.kt)("p",null,"Like ",(0,o.kt)("inlineCode",{parentName:"p"},"Compiler"),", if you want to compose your own compiler from the underlying function that makes up a ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler"),", that is also possible, and in fact, it is encrouaged."),(0,o.kt)("h2",{id:"implementing-authorization"},"Implementing authorization"),(0,o.kt)("p",null,"Something most applications need is authorization.\nThere is no build-in support for this, since authorization is usually very application specific.\nHowever, it is very simple to implement the authorization your application needs in ",(0,o.kt)("inlineCode",{parentName:"p"},"gql"),"."),(0,o.kt)("p",null,"Commonly, authorization is provided in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization")," http header.\nConsider the following authorization implementation, that also threads authorization credentials through the whole graph."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import org.http4s._\nimport org.http4s.headers._\nimport org.http4s.dsl.io._\n\nfinal case class Creds(userId: String)\n\ntype AuthIO[A] = Kleisli[IO, Creds, A]\n\ndef schema: Schema[AuthIO, Unit, Unit, Unit] = ???\n\ndef authorize(token: String): IO[Option[Creds]] = ???\n\ndef authedHttp4sCompiler: Http4sCompiler[IO] = Http4sCompiler[IO]{ hcp =>\n  def unauth(msg: String) = \n    IO.pure(Left(Response[IO](Status.Unauthorized).withEntity(msg)))\n\n  hcp.headers.get[Authorization] match {\n    case None => unauth("missing authorization header")\n    case Some(Authorization(Credentials.Token(AuthScheme.Bearer, token))) =>\n      authorize(token).flatMap{\n        case None => unauth("invalid token")\n        case Some(creds) => IO.pure {\n          Right {\n            Compiler[AuthIO]\n              .compileWith(schema, hcp.compilerParameters)\n              .map(_.mapK(Kleisli.applyK[IO, Creds](creds)))\n          }\n        }\n      }\n    case _ => unauth("invalid authorization header, use a Bearer Token")\n  }\n}\n')),(0,o.kt)("h2",{id:"websocket-support"},"Websocket support"),(0,o.kt)("p",null,"To implement streaming, we use websockets.\nThe websocket route is not implemented via ",(0,o.kt)("inlineCode",{parentName:"p"},"Http4sCompiler"),", but rather a function ",(0,o.kt)("inlineCode",{parentName:"p"},"Map[String, Json] => F[Either[String, Compiler[F]]]"),".\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"Map")," carries the ",(0,o.kt)("inlineCode",{parentName:"p"},"ConnectionInit")," payload.\nThe structure of this ",(0,o.kt)("inlineCode",{parentName:"p"},"Map")," is not constrained; this is up to the application to consider."),(0,o.kt)("p",null,"However, the norm is to embed what is usually http headers in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Map")," such as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "authorization": "Bearer aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1kUXc0dzlXZ1hjUQ=="\n}\n')),(0,o.kt)("p",null,"The left side of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Either[String, Compiler[F]]")," function lets the application return an error message to the client, which also immideately closes the websocket.\nOne can embed errors such as ",(0,o.kt)("inlineCode",{parentName:"p"},"unauthorized")," here.\nThe GraphQL over websocket protocol defines no way to communicate arbitary information without closing the connection."))}c.isMDXComponent=!0}}]);